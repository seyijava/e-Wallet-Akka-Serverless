// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wallet_api.proto

package com.bigdataConcept.akka.serverless.ewallet;

public final class WalletApi {
  private WalletApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TransactionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.TransactionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.TransactionResponse}
   */
  public  static final class TransactionResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.TransactionResponse)
      TransactionResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionResponse.newBuilder() to construct.
    private TransactionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionResponse() {
      message_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransactionResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse) obj;

      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.TransactionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.TransactionResponse)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.TransactionResponse)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.TransactionResponse)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionResponse>
        PARSER = new com.google.protobuf.AbstractParser<TransactionResponse>() {
      @java.lang.Override
      public TransactionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.TransactionResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalletResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.WalletResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.WalletResponse}
   */
  public  static final class WalletResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.WalletResponse)
      WalletResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalletResponse.newBuilder() to construct.
    private WalletResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalletResponse() {
      message_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalletResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalletResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.Builder.class);
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse) obj;

      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.WalletResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.WalletResponse)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        message_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse(this);
        result.message_ = message_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.WalletResponse)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.WalletResponse)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalletResponse>
        PARSER = new com.google.protobuf.AbstractParser<WalletResponse>() {
      @java.lang.Override
      public WalletResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalletResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalletResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalletResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.WalletResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DebitCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.DebitCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    boolean hasMoney();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.DebitCommand}
   */
  public  static final class DebitCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.DebitCommand)
      DebitCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DebitCommand.newBuilder() to construct.
    private DebitCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebitCommand() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DebitCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DebitCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder subBuilder = null;
              if (money_ != null) {
                subBuilder = money_.toBuilder();
              }
              money_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(money_);
                money_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONEY_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money money_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public boolean hasMoney() {
      return money_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney() {
      return money_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder() {
      return getMoney();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (money_ != null) {
        output.writeMessage(2, getMoney());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (money_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMoney());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasMoney() != other.hasMoney()) return false;
      if (hasMoney()) {
        if (!getMoney()
            .equals(other.getMoney())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasMoney()) {
        hash = (37 * hash) + MONEY_FIELD_NUMBER;
        hash = (53 * hash) + getMoney().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.DebitCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.DebitCommand)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (moneyBuilder_ == null) {
          money_ = null;
        } else {
          money_ = null;
          moneyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand(this);
        result.walletId_ = walletId_;
        if (moneyBuilder_ == null) {
          result.money_ = money_;
        } else {
          result.money_ = moneyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasMoney()) {
          mergeMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money money_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> moneyBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public boolean hasMoney() {
        return moneyBuilder_ != null || money_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney() {
        if (moneyBuilder_ == null) {
          return money_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
        } else {
          return moneyBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder setMoney(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (moneyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          money_ = value;
          onChanged();
        } else {
          moneyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder setMoney(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder builderForValue) {
        if (moneyBuilder_ == null) {
          money_ = builderForValue.build();
          onChanged();
        } else {
          moneyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder mergeMoney(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (moneyBuilder_ == null) {
          if (money_ != null) {
            money_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.newBuilder(money_).mergeFrom(value).buildPartial();
          } else {
            money_ = value;
          }
          onChanged();
        } else {
          moneyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder clearMoney() {
        if (moneyBuilder_ == null) {
          money_ = null;
          onChanged();
        } else {
          money_ = null;
          moneyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder getMoneyBuilder() {
        
        onChanged();
        return getMoneyFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder() {
        if (moneyBuilder_ != null) {
          return moneyBuilder_.getMessageOrBuilder();
        } else {
          return money_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> 
          getMoneyFieldBuilder() {
        if (moneyBuilder_ == null) {
          moneyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder>(
                  getMoney(),
                  getParentForChildren(),
                  isClean());
          money_ = null;
        }
        return moneyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.DebitCommand)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.DebitCommand)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebitCommand>
        PARSER = new com.google.protobuf.AbstractParser<DebitCommand>() {
      @java.lang.Override
      public DebitCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DebitCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebitCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebitCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.DebitCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreditCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.CreditCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    boolean hasMoney();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.CreditCommand}
   */
  public  static final class CreditCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.CreditCommand)
      CreditCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreditCommand.newBuilder() to construct.
    private CreditCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreditCommand() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreditCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreditCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder subBuilder = null;
              if (money_ != null) {
                subBuilder = money_.toBuilder();
              }
              money_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(money_);
                money_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONEY_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money money_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public boolean hasMoney() {
      return money_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney() {
      return money_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder() {
      return getMoney();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (money_ != null) {
        output.writeMessage(2, getMoney());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (money_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMoney());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasMoney() != other.hasMoney()) return false;
      if (hasMoney()) {
        if (!getMoney()
            .equals(other.getMoney())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasMoney()) {
        hash = (37 * hash) + MONEY_FIELD_NUMBER;
        hash = (53 * hash) + getMoney().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.CreditCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.CreditCommand)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (moneyBuilder_ == null) {
          money_ = null;
        } else {
          money_ = null;
          moneyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand(this);
        result.walletId_ = walletId_;
        if (moneyBuilder_ == null) {
          result.money_ = money_;
        } else {
          result.money_ = moneyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasMoney()) {
          mergeMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money money_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> moneyBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public boolean hasMoney() {
        return moneyBuilder_ != null || money_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getMoney() {
        if (moneyBuilder_ == null) {
          return money_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
        } else {
          return moneyBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder setMoney(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (moneyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          money_ = value;
          onChanged();
        } else {
          moneyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder setMoney(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder builderForValue) {
        if (moneyBuilder_ == null) {
          money_ = builderForValue.build();
          onChanged();
        } else {
          moneyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder mergeMoney(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (moneyBuilder_ == null) {
          if (money_ != null) {
            money_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.newBuilder(money_).mergeFrom(value).buildPartial();
          } else {
            money_ = value;
          }
          onChanged();
        } else {
          moneyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public Builder clearMoney() {
        if (moneyBuilder_ == null) {
          money_ = null;
          onChanged();
        } else {
          money_ = null;
          moneyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder getMoneyBuilder() {
        
        onChanged();
        return getMoneyFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getMoneyOrBuilder() {
        if (moneyBuilder_ != null) {
          return moneyBuilder_.getMessageOrBuilder();
        } else {
          return money_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : money_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money money = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> 
          getMoneyFieldBuilder() {
        if (moneyBuilder_ == null) {
          moneyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder>(
                  getMoney(),
                  getParentForChildren(),
                  isClean());
          money_ = null;
        }
        return moneyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.CreditCommand)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.CreditCommand)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreditCommand>
        PARSER = new com.google.protobuf.AbstractParser<CreditCommand>() {
      @java.lang.Override
      public CreditCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreditCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreditCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreditCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreditCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateWalletCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    boolean hasProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand}
   */
  public  static final class CreateWalletCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand)
      CreateWalletCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateWalletCommand.newBuilder() to construct.
    private CreateWalletCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateWalletCommand() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateWalletCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateWalletCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder subBuilder = null;
              if (profile_ != null) {
                subBuilder = profile_.toBuilder();
              }
              profile_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(profile_);
                profile_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROFILE_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
      return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
      return getProfile();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (profile_ != null) {
        output.writeMessage(2, getProfile());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProfile());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasProfile() != other.hasProfile()) return false;
      if (hasProfile()) {
        if (!getProfile()
            .equals(other.getProfile())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasProfile()) {
        hash = (37 * hash) + PROFILE_FIELD_NUMBER;
        hash = (53 * hash) + getProfile().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (profileBuilder_ == null) {
          profile_ = null;
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand(this);
        result.walletId_ = walletId_;
        if (profileBuilder_ == null) {
          result.profile_ = profile_;
        } else {
          result.profile_ = profileBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasProfile()) {
          mergeProfile(other.getProfile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> profileBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public boolean hasProfile() {
        return profileBuilder_ != null || profile_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
        if (profileBuilder_ == null) {
          return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        } else {
          return profileBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          profile_ = value;
          onChanged();
        } else {
          profileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder builderForValue) {
        if (profileBuilder_ == null) {
          profile_ = builderForValue.build();
          onChanged();
        } else {
          profileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder mergeProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (profile_ != null) {
            profile_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.newBuilder(profile_).mergeFrom(value).buildPartial();
          } else {
            profile_ = value;
          }
          onChanged();
        } else {
          profileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder clearProfile() {
        if (profileBuilder_ == null) {
          profile_ = null;
          onChanged();
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder getProfileBuilder() {
        
        onChanged();
        return getProfileFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
        if (profileBuilder_ != null) {
          return profileBuilder_.getMessageOrBuilder();
        } else {
          return profile_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> 
          getProfileFieldBuilder() {
        if (profileBuilder_ == null) {
          profileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder>(
                  getProfile(),
                  getParentForChildren(),
                  isClean());
          profile_ = null;
        }
        return profileBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.CreateWalletCommand)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateWalletCommand>
        PARSER = new com.google.protobuf.AbstractParser<CreateWalletCommand>() {
      @java.lang.Override
      public CreateWalletCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateWalletCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateWalletCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateWalletCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.CreateWalletCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestMiniStatementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement}
   */
  public  static final class RequestMiniStatement extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement)
      RequestMiniStatementOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RequestMiniStatement.newBuilder() to construct.
    private RequestMiniStatement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestMiniStatement() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RequestMiniStatement();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestMiniStatement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement(this);
        result.walletId_ = walletId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.RequestMiniStatement)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestMiniStatement>
        PARSER = new com.google.protobuf.AbstractParser<RequestMiniStatement>() {
      @java.lang.Override
      public RequestMiniStatement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestMiniStatement(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestMiniStatement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestMiniStatement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestMiniStatement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MiniStatementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.MiniStatement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> 
        getTransactionsList();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactions(int index);
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    int getTransactionsCount();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
        getTransactionsOrBuilderList();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionsOrBuilder(
        int index);

    /**
     * <code>double balance = 2;</code>
     */
    double getBalance();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.MiniStatement}
   */
  public  static final class MiniStatement extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.MiniStatement)
      MiniStatementOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MiniStatement.newBuilder() to construct.
    private MiniStatement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MiniStatement() {
      transactions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MiniStatement();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MiniStatement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transactions_ = new java.util.ArrayList<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction>();
                mutable_bitField0_ |= 0x00000001;
              }
              transactions_.add(
                  input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.parser(), extensionRegistry));
              break;
            }
            case 17: {

              balance_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          transactions_ = java.util.Collections.unmodifiableList(transactions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.Builder.class);
    }

    public static final int TRANSACTIONS_FIELD_NUMBER = 1;
    private java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> transactions_;
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> getTransactionsList() {
      return transactions_;
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    public java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
        getTransactionsOrBuilderList() {
      return transactions_;
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    public int getTransactionsCount() {
      return transactions_.size();
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactions(int index) {
      return transactions_.get(index);
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionsOrBuilder(
        int index) {
      return transactions_.get(index);
    }

    public static final int BALANCE_FIELD_NUMBER = 2;
    private double balance_;
    /**
     * <code>double balance = 2;</code>
     */
    public double getBalance() {
      return balance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < transactions_.size(); i++) {
        output.writeMessage(1, transactions_.get(i));
      }
      if (balance_ != 0D) {
        output.writeDouble(2, balance_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < transactions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, transactions_.get(i));
      }
      if (balance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, balance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement) obj;

      if (!getTransactionsList()
          .equals(other.getTransactionsList())) return false;
      if (java.lang.Double.doubleToLongBits(getBalance())
          != java.lang.Double.doubleToLongBits(
              other.getBalance())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTransactionsCount() > 0) {
        hash = (37 * hash) + TRANSACTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionsList().hashCode();
      }
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBalance()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.MiniStatement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.MiniStatement)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTransactionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionsBuilder_ == null) {
          transactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          transactionsBuilder_.clear();
        }
        balance_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement(this);
        int from_bitField0_ = bitField0_;
        if (transactionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            transactions_ = java.util.Collections.unmodifiableList(transactions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.transactions_ = transactions_;
        } else {
          result.transactions_ = transactionsBuilder_.build();
        }
        result.balance_ = balance_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement.getDefaultInstance()) return this;
        if (transactionsBuilder_ == null) {
          if (!other.transactions_.isEmpty()) {
            if (transactions_.isEmpty()) {
              transactions_ = other.transactions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTransactionsIsMutable();
              transactions_.addAll(other.transactions_);
            }
            onChanged();
          }
        } else {
          if (!other.transactions_.isEmpty()) {
            if (transactionsBuilder_.isEmpty()) {
              transactionsBuilder_.dispose();
              transactionsBuilder_ = null;
              transactions_ = other.transactions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              transactionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTransactionsFieldBuilder() : null;
            } else {
              transactionsBuilder_.addAllMessages(other.transactions_);
            }
          }
        }
        if (other.getBalance() != 0D) {
          setBalance(other.getBalance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> transactions_ =
        java.util.Collections.emptyList();
      private void ensureTransactionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          transactions_ = new java.util.ArrayList<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction>(transactions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> transactionsBuilder_;

      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> getTransactionsList() {
        if (transactionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transactions_);
        } else {
          return transactionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public int getTransactionsCount() {
        if (transactionsBuilder_ == null) {
          return transactions_.size();
        } else {
          return transactionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactions(int index) {
        if (transactionsBuilder_ == null) {
          return transactions_.get(index);
        } else {
          return transactionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder setTransactions(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.set(index, value);
          onChanged();
        } else {
          transactionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder setTransactions(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.set(index, builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder addTransactions(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.add(value);
          onChanged();
        } else {
          transactionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder addTransactions(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionsIsMutable();
          transactions_.add(index, value);
          onChanged();
        } else {
          transactionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder addTransactions(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.add(builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder addTransactions(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.add(index, builderForValue.build());
          onChanged();
        } else {
          transactionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder addAllTransactions(
          java.lang.Iterable<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> values) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transactions_);
          onChanged();
        } else {
          transactionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder clearTransactions() {
        if (transactionsBuilder_ == null) {
          transactions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          transactionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public Builder removeTransactions(int index) {
        if (transactionsBuilder_ == null) {
          ensureTransactionsIsMutable();
          transactions_.remove(index);
          onChanged();
        } else {
          transactionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder getTransactionsBuilder(
          int index) {
        return getTransactionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionsOrBuilder(
          int index) {
        if (transactionsBuilder_ == null) {
          return transactions_.get(index);  } else {
          return transactionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
           getTransactionsOrBuilderList() {
        if (transactionsBuilder_ != null) {
          return transactionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transactions_);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder addTransactionsBuilder() {
        return getTransactionsFieldBuilder().addBuilder(
            com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder addTransactionsBuilder(
          int index) {
        return getTransactionsFieldBuilder().addBuilder(
            index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactions = 1;</code>
       */
      public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder> 
           getTransactionsBuilderList() {
        return getTransactionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
          getTransactionsFieldBuilder() {
        if (transactionsBuilder_ == null) {
          transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder>(
                  transactions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          transactions_ = null;
        }
        return transactionsBuilder_;
      }

      private double balance_ ;
      /**
       * <code>double balance = 2;</code>
       */
      public double getBalance() {
        return balance_;
      }
      /**
       * <code>double balance = 2;</code>
       */
      public Builder setBalance(double value) {
        
        balance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double balance = 2;</code>
       */
      public Builder clearBalance() {
        
        balance_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.MiniStatement)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.MiniStatement)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MiniStatement>
        PARSER = new com.google.protobuf.AbstractParser<MiniStatement>() {
      @java.lang.Override
      public MiniStatement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MiniStatement(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MiniStatement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MiniStatement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.MiniStatement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.RequestProfile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.RequestProfile}
   */
  public  static final class RequestProfile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.RequestProfile)
      RequestProfileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RequestProfile.newBuilder() to construct.
    private RequestProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestProfile() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RequestProfile();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestProfile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.RequestProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.RequestProfile)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile(this);
        result.walletId_ = walletId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1 [(.akkaserverless.field) = { ... }</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.RequestProfile)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.RequestProfile)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestProfile>
        PARSER = new com.google.protobuf.AbstractParser<RequestProfile>() {
      @java.lang.Override
      public RequestProfile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestProfile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestProfile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestProfile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.RequestProfile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProfileResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.ProfileResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    boolean hasProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.ProfileResponse}
   */
  public  static final class ProfileResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.ProfileResponse)
      ProfileResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProfileResponse.newBuilder() to construct.
    private ProfileResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProfileResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProfileResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProfileResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder subBuilder = null;
              if (profile_ != null) {
                subBuilder = profile_.toBuilder();
              }
              profile_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(profile_);
                profile_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.Builder.class);
    }

    public static final int PROFILE_FIELD_NUMBER = 1;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
      return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
      return getProfile();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (profile_ != null) {
        output.writeMessage(1, getProfile());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProfile());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse other = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse) obj;

      if (hasProfile() != other.hasProfile()) return false;
      if (hasProfile()) {
        if (!getProfile()
            .equals(other.getProfile())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProfile()) {
        hash = (37 * hash) + PROFILE_FIELD_NUMBER;
        hash = (53 * hash) + getProfile().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.ProfileResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.ProfileResponse)
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.class, com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (profileBuilder_ == null) {
          profile_ = null;
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse build() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse result = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse(this);
        if (profileBuilder_ == null) {
          result.profile_ = profile_;
        } else {
          result.profile_ = profileBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse.getDefaultInstance()) return this;
        if (other.hasProfile()) {
          mergeProfile(other.getProfile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> profileBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public boolean hasProfile() {
        return profileBuilder_ != null || profile_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
        if (profileBuilder_ == null) {
          return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        } else {
          return profileBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public Builder setProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          profile_ = value;
          onChanged();
        } else {
          profileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public Builder setProfile(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder builderForValue) {
        if (profileBuilder_ == null) {
          profile_ = builderForValue.build();
          onChanged();
        } else {
          profileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public Builder mergeProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (profile_ != null) {
            profile_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.newBuilder(profile_).mergeFrom(value).buildPartial();
          } else {
            profile_ = value;
          }
          onChanged();
        } else {
          profileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public Builder clearProfile() {
        if (profileBuilder_ == null) {
          profile_ = null;
          onChanged();
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder getProfileBuilder() {
        
        onChanged();
        return getProfileFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
        if (profileBuilder_ != null) {
          return profileBuilder_.getMessageOrBuilder();
        } else {
          return profile_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> 
          getProfileFieldBuilder() {
        if (profileBuilder_ == null) {
          profileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder>(
                  getProfile(),
                  getParentForChildren(),
                  isClean());
          profile_ = null;
        }
        return profileBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.ProfileResponse)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.ProfileResponse)
    private static final com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProfileResponse>
        PARSER = new com.google.protobuf.AbstractParser<ProfileResponse>() {
      @java.lang.Override
      public ProfileResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProfileResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProfileResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProfileResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.WalletApi.ProfileResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020wallet_api.proto\022*com.bigdataConcept.a" +
      "kka.serverless.ewallet\032\033google/protobuf/" +
      "empty.proto\032 akkaserverless/annotations." +
      "proto\032\034google/api/annotations.proto\032\037goo" +
      "gle/protobuf/timestamp.proto\032\"value-enti" +
      "ties/wallet_domain.proto\"&\n\023TransactionR" +
      "esponse\022\017\n\007message\030\001 \001(\t\"!\n\016WalletRespon" +
      "se\022\017\n\007message\030\001 \001(\t\"q\n\014DebitCommand\022\030\n\tw" +
      "allet_id\030\001 \001(\tB\005\302C\002\010\001\022G\n\005money\030\002 \001(\01328.c" +
      "om.bigdataConcept.akka.serverless.ewalle" +
      "t.domain.Money\"r\n\rCreditCommand\022\030\n\twalle" +
      "t_id\030\001 \001(\tB\005\302C\002\010\001\022G\n\005money\030\002 \001(\01328.com.b" +
      "igdataConcept.akka.serverless.ewallet.do" +
      "main.Money\"|\n\023CreateWalletCommand\022\030\n\twal" +
      "let_id\030\001 \001(\tB\005\302C\002\010\001\022K\n\007profile\030\002 \001(\0132:.c" +
      "om.bigdataConcept.akka.serverless.ewalle" +
      "t.domain.Profile\"0\n\024RequestMiniStatement" +
      "\022\030\n\twallet_id\030\001 \001(\tB\005\302C\002\010\001\"v\n\rMiniStatem" +
      "ent\022T\n\014transactions\030\001 \003(\0132>.com.bigdataC" +
      "oncept.akka.serverless.ewallet.domain.Tr" +
      "ansaction\022\017\n\007balance\030\002 \001(\001\"*\n\016RequestPro" +
      "file\022\030\n\twallet_id\030\001 \001(\tB\005\302C\002\010\001\"^\n\017Profil" +
      "eResponse\022K\n\007profile\030\001 \001(\0132:.com.bigdata" +
      "Concept.akka.serverless.ewallet.domain.P" +
      "rofile2\242\007\n\rWalletService\022\253\001\n\010Withdraw\0228." +
      "com.bigdataConcept.akka.serverless.ewall" +
      "et.DebitCommand\032?.com.bigdataConcept.akk" +
      "a.serverless.ewallet.TransactionResponse" +
      "\"$\202\323\344\223\002\036\"\031/wallet/{wallet_id}/debit:\001*\022\262" +
      "\001\n\014CreateWallet\022?.com.bigdataConcept.akk" +
      "a.serverless.ewallet.CreateWalletCommand" +
      "\032:.com.bigdataConcept.akka.serverless.ew" +
      "allet.WalletResponse\"%\202\323\344\223\002\037\"\032/wallet/{w" +
      "allet_id}/create:\001*\022\254\001\n\007Deposit\0229.com.bi" +
      "gdataConcept.akka.serverless.ewallet.Cre" +
      "ditCommand\032?.com.bigdataConcept.akka.ser" +
      "verless.ewallet.TransactionResponse\"%\202\323\344" +
      "\223\002\037\"\032/wallet/{wallet_id}/credit:\001*\022\272\001\n\020G" +
      "etMiniStatement\022@.com.bigdataConcept.akk" +
      "a.serverless.ewallet.RequestMiniStatemen" +
      "t\0329.com.bigdataConcept.akka.serverless.e" +
      "wallet.MiniStatement\")\202\323\344\223\002#\022!/wallet/{w" +
      "allet_id}/ministatement\022\252\001\n\nGetProfile\022:" +
      ".com.bigdataConcept.akka.serverless.ewal" +
      "let.RequestProfile\032;.com.bigdataConcept." +
      "akka.serverless.ewallet.ProfileResponse\"" +
      "#\202\323\344\223\002\035\022\033/wallet/{wallet_id}/profile\032\025\302C" +
      "\022\010\002\022\016.domain.WalletB\013B\tWalletApib\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.akkaserverless.Annotations.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.getDescriptor(),
        });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_TransactionResponse_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_WalletResponse_descriptor,
        new java.lang.String[] { "Message", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_DebitCommand_descriptor,
        new java.lang.String[] { "WalletId", "Money", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_CreditCommand_descriptor,
        new java.lang.String[] { "WalletId", "Money", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_CreateWalletCommand_descriptor,
        new java.lang.String[] { "WalletId", "Profile", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestMiniStatement_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_MiniStatement_descriptor,
        new java.lang.String[] { "Transactions", "Balance", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_RequestProfile_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_ProfileResponse_descriptor,
        new java.lang.String[] { "Profile", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.akkaserverless.Annotations.field);
    registry.add(com.akkaserverless.Annotations.service);
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.EmptyProto.getDescriptor();
    com.akkaserverless.Annotations.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
