// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: value-entities/wallet_domain.proto

package com.bigdataConcept.akka.serverless.ewallet.domain;

public final class WalletDomain {
  private WalletDomain() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType}
   */
  public enum TransactionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Credit = 0;</code>
     */
    Credit(0),
    /**
     * <code>Debit = 1;</code>
     */
    Debit(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Credit = 0;</code>
     */
    public static final int Credit_VALUE = 0;
    /**
     * <code>Debit = 1;</code>
     */
    public static final int Debit_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransactionType valueOf(int value) {
      return forNumber(value);
    }

    public static TransactionType forNumber(int value) {
      switch (value) {
        case 0: return Credit;
        case 1: return Debit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransactionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransactionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransactionType>() {
            public TransactionType findValueByNumber(int number) {
              return TransactionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.getDescriptor().getEnumTypes().get(0);
    }

    private static final TransactionType[] VALUES = values();

    public static TransactionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TransactionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType)
  }

  public interface WalletCreditedEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1;</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    boolean hasAmt();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    int getTransTypeValue();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType();

    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    boolean hasTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    com.google.protobuf.Timestamp getTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent}
   */
  public  static final class WalletCreditedEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent)
      WalletCreditedEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalletCreditedEvent.newBuilder() to construct.
    private WalletCreditedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalletCreditedEvent() {
      walletId_ = "";
      transType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalletCreditedEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalletCreditedEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder subBuilder = null;
              if (amt_ != null) {
                subBuilder = amt_.toBuilder();
              }
              amt_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amt_);
                amt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              transType_ = rawValue;
              break;
            }
            case 34: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (transactionDate_ != null) {
                subBuilder = transactionDate_.toBuilder();
              }
              transactionDate_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionDate_);
                transactionDate_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1;</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMT_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money amt_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public boolean hasAmt() {
      return amt_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt() {
      return amt_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder() {
      return getAmt();
    }

    public static final int TRANSTYPE_FIELD_NUMBER = 3;
    private int transType_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    public int getTransTypeValue() {
      return transType_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType() {
      @SuppressWarnings("deprecation")
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transType_);
      return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
    }

    public static final int TRANSACTIONDATE_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp transactionDate_;
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public boolean hasTransactionDate() {
      return transactionDate_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public com.google.protobuf.Timestamp getTransactionDate() {
      return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
      return getTransactionDate();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (amt_ != null) {
        output.writeMessage(2, getAmt());
      }
      if (transType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        output.writeEnum(3, transType_);
      }
      if (transactionDate_ != null) {
        output.writeMessage(4, getTransactionDate());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (amt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAmt());
      }
      if (transType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, transType_);
      }
      if (transactionDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTransactionDate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasAmt() != other.hasAmt()) return false;
      if (hasAmt()) {
        if (!getAmt()
            .equals(other.getAmt())) return false;
      }
      if (transType_ != other.transType_) return false;
      if (hasTransactionDate() != other.hasTransactionDate()) return false;
      if (hasTransactionDate()) {
        if (!getTransactionDate()
            .equals(other.getTransactionDate())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasAmt()) {
        hash = (37 * hash) + AMT_FIELD_NUMBER;
        hash = (53 * hash) + getAmt().hashCode();
      }
      hash = (37 * hash) + TRANSTYPE_FIELD_NUMBER;
      hash = (53 * hash) + transType_;
      if (hasTransactionDate()) {
        hash = (37 * hash) + TRANSACTIONDATE_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionDate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (amtBuilder_ == null) {
          amt_ = null;
        } else {
          amt_ = null;
          amtBuilder_ = null;
        }
        transType_ = 0;

        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent(this);
        result.walletId_ = walletId_;
        if (amtBuilder_ == null) {
          result.amt_ = amt_;
        } else {
          result.amt_ = amtBuilder_.build();
        }
        result.transType_ = transType_;
        if (transactionDateBuilder_ == null) {
          result.transactionDate_ = transactionDate_;
        } else {
          result.transactionDate_ = transactionDateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasAmt()) {
          mergeAmt(other.getAmt());
        }
        if (other.transType_ != 0) {
          setTransTypeValue(other.getTransTypeValue());
        }
        if (other.hasTransactionDate()) {
          mergeTransactionDate(other.getTransactionDate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1;</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money amt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> amtBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public boolean hasAmt() {
        return amtBuilder_ != null || amt_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt() {
        if (amtBuilder_ == null) {
          return amt_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
        } else {
          return amtBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder setAmt(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (amtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amt_ = value;
          onChanged();
        } else {
          amtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder setAmt(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder builderForValue) {
        if (amtBuilder_ == null) {
          amt_ = builderForValue.build();
          onChanged();
        } else {
          amtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder mergeAmt(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (amtBuilder_ == null) {
          if (amt_ != null) {
            amt_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.newBuilder(amt_).mergeFrom(value).buildPartial();
          } else {
            amt_ = value;
          }
          onChanged();
        } else {
          amtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder clearAmt() {
        if (amtBuilder_ == null) {
          amt_ = null;
          onChanged();
        } else {
          amt_ = null;
          amtBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder getAmtBuilder() {
        
        onChanged();
        return getAmtFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder() {
        if (amtBuilder_ != null) {
          return amtBuilder_.getMessageOrBuilder();
        } else {
          return amt_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> 
          getAmtFieldBuilder() {
        if (amtBuilder_ == null) {
          amtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder>(
                  getAmt(),
                  getParentForChildren(),
                  isClean());
          amt_ = null;
        }
        return amtBuilder_;
      }

      private int transType_ = 0;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public int getTransTypeValue() {
        return transType_;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder setTransTypeValue(int value) {
        transType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType() {
        @SuppressWarnings("deprecation")
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transType_);
        return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder setTransType(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        transType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder clearTransType() {
        
        transType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp transactionDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> transactionDateBuilder_;
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public boolean hasTransactionDate() {
        return transactionDateBuilder_ != null || transactionDate_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.Timestamp getTransactionDate() {
        if (transactionDateBuilder_ == null) {
          return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        } else {
          return transactionDateBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder setTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionDate_ = value;
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder setTransactionDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = builderForValue.build();
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder mergeTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (transactionDate_ != null) {
            transactionDate_ =
              com.google.protobuf.Timestamp.newBuilder(transactionDate_).mergeFrom(value).buildPartial();
          } else {
            transactionDate_ = value;
          }
          onChanged();
        } else {
          transactionDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder clearTransactionDate() {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
          onChanged();
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTransactionDateBuilder() {
        
        onChanged();
        return getTransactionDateFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
        if (transactionDateBuilder_ != null) {
          return transactionDateBuilder_.getMessageOrBuilder();
        } else {
          return transactionDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTransactionDateFieldBuilder() {
        if (transactionDateBuilder_ == null) {
          transactionDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTransactionDate(),
                  getParentForChildren(),
                  isClean());
          transactionDate_ = null;
        }
        return transactionDateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreditedEvent)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalletCreditedEvent>
        PARSER = new com.google.protobuf.AbstractParser<WalletCreditedEvent>() {
      @java.lang.Override
      public WalletCreditedEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalletCreditedEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalletCreditedEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalletCreditedEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreditedEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalletDebitedEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1;</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    boolean hasAmt();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    int getTransTypeValue();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType();

    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    boolean hasTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    com.google.protobuf.Timestamp getTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent}
   */
  public  static final class WalletDebitedEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent)
      WalletDebitedEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalletDebitedEvent.newBuilder() to construct.
    private WalletDebitedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalletDebitedEvent() {
      walletId_ = "";
      transType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalletDebitedEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalletDebitedEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder subBuilder = null;
              if (amt_ != null) {
                subBuilder = amt_.toBuilder();
              }
              amt_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amt_);
                amt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              transType_ = rawValue;
              break;
            }
            case 34: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (transactionDate_ != null) {
                subBuilder = transactionDate_.toBuilder();
              }
              transactionDate_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionDate_);
                transactionDate_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1;</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMT_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money amt_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public boolean hasAmt() {
      return amt_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt() {
      return amt_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder() {
      return getAmt();
    }

    public static final int TRANSTYPE_FIELD_NUMBER = 3;
    private int transType_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    public int getTransTypeValue() {
      return transType_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType() {
      @SuppressWarnings("deprecation")
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transType_);
      return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
    }

    public static final int TRANSACTIONDATE_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp transactionDate_;
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public boolean hasTransactionDate() {
      return transactionDate_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public com.google.protobuf.Timestamp getTransactionDate() {
      return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
      return getTransactionDate();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (amt_ != null) {
        output.writeMessage(2, getAmt());
      }
      if (transType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        output.writeEnum(3, transType_);
      }
      if (transactionDate_ != null) {
        output.writeMessage(4, getTransactionDate());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (amt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAmt());
      }
      if (transType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, transType_);
      }
      if (transactionDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTransactionDate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasAmt() != other.hasAmt()) return false;
      if (hasAmt()) {
        if (!getAmt()
            .equals(other.getAmt())) return false;
      }
      if (transType_ != other.transType_) return false;
      if (hasTransactionDate() != other.hasTransactionDate()) return false;
      if (hasTransactionDate()) {
        if (!getTransactionDate()
            .equals(other.getTransactionDate())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasAmt()) {
        hash = (37 * hash) + AMT_FIELD_NUMBER;
        hash = (53 * hash) + getAmt().hashCode();
      }
      hash = (37 * hash) + TRANSTYPE_FIELD_NUMBER;
      hash = (53 * hash) + transType_;
      if (hasTransactionDate()) {
        hash = (37 * hash) + TRANSACTIONDATE_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionDate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (amtBuilder_ == null) {
          amt_ = null;
        } else {
          amt_ = null;
          amtBuilder_ = null;
        }
        transType_ = 0;

        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent(this);
        result.walletId_ = walletId_;
        if (amtBuilder_ == null) {
          result.amt_ = amt_;
        } else {
          result.amt_ = amtBuilder_.build();
        }
        result.transType_ = transType_;
        if (transactionDateBuilder_ == null) {
          result.transactionDate_ = transactionDate_;
        } else {
          result.transactionDate_ = transactionDateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasAmt()) {
          mergeAmt(other.getAmt());
        }
        if (other.transType_ != 0) {
          setTransTypeValue(other.getTransTypeValue());
        }
        if (other.hasTransactionDate()) {
          mergeTransactionDate(other.getTransactionDate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1;</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money amt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> amtBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public boolean hasAmt() {
        return amtBuilder_ != null || amt_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getAmt() {
        if (amtBuilder_ == null) {
          return amt_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
        } else {
          return amtBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder setAmt(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (amtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amt_ = value;
          onChanged();
        } else {
          amtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder setAmt(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder builderForValue) {
        if (amtBuilder_ == null) {
          amt_ = builderForValue.build();
          onChanged();
        } else {
          amtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder mergeAmt(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money value) {
        if (amtBuilder_ == null) {
          if (amt_ != null) {
            amt_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.newBuilder(amt_).mergeFrom(value).buildPartial();
          } else {
            amt_ = value;
          }
          onChanged();
        } else {
          amtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public Builder clearAmt() {
        if (amtBuilder_ == null) {
          amt_ = null;
          onChanged();
        } else {
          amt_ = null;
          amtBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder getAmtBuilder() {
        
        onChanged();
        return getAmtFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder getAmtOrBuilder() {
        if (amtBuilder_ != null) {
          return amtBuilder_.getMessageOrBuilder();
        } else {
          return amt_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance() : amt_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Money amt = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder> 
          getAmtFieldBuilder() {
        if (amtBuilder_ == null) {
          amtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder>(
                  getAmt(),
                  getParentForChildren(),
                  isClean());
          amt_ = null;
        }
        return amtBuilder_;
      }

      private int transType_ = 0;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public int getTransTypeValue() {
        return transType_;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder setTransTypeValue(int value) {
        transType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransType() {
        @SuppressWarnings("deprecation")
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transType_);
        return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder setTransType(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        transType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transType = 3;</code>
       */
      public Builder clearTransType() {
        
        transType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp transactionDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> transactionDateBuilder_;
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public boolean hasTransactionDate() {
        return transactionDateBuilder_ != null || transactionDate_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.Timestamp getTransactionDate() {
        if (transactionDateBuilder_ == null) {
          return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        } else {
          return transactionDateBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder setTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionDate_ = value;
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder setTransactionDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = builderForValue.build();
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder mergeTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (transactionDate_ != null) {
            transactionDate_ =
              com.google.protobuf.Timestamp.newBuilder(transactionDate_).mergeFrom(value).buildPartial();
          } else {
            transactionDate_ = value;
          }
          onChanged();
        } else {
          transactionDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public Builder clearTransactionDate() {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
          onChanged();
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTransactionDateBuilder() {
        
        onChanged();
        return getTransactionDateFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
        if (transactionDateBuilder_ != null) {
          return transactionDateBuilder_.getMessageOrBuilder();
        } else {
          return transactionDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTransactionDateFieldBuilder() {
        if (transactionDateBuilder_ == null) {
          transactionDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTransactionDate(),
                  getParentForChildren(),
                  isClean());
          transactionDate_ = null;
        }
        return transactionDateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletDebitedEvent)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalletDebitedEvent>
        PARSER = new com.google.protobuf.AbstractParser<WalletDebitedEvent>() {
      @java.lang.Override
      public WalletDebitedEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalletDebitedEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalletDebitedEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalletDebitedEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletDebitedEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalletCreatedEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string wallet_id = 1;</code>
     */
    java.lang.String getWalletId();
    /**
     * <code>string wallet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    boolean hasProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent}
   */
  public  static final class WalletCreatedEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent)
      WalletCreatedEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalletCreatedEvent.newBuilder() to construct.
    private WalletCreatedEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalletCreatedEvent() {
      walletId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalletCreatedEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalletCreatedEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder subBuilder = null;
              if (profile_ != null) {
                subBuilder = profile_.toBuilder();
              }
              profile_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(profile_);
                profile_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.Builder.class);
    }

    public static final int WALLET_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string wallet_id = 1;</code>
     */
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string wallet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROFILE_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
      return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
      return getProfile();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getWalletIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, walletId_);
      }
      if (profile_ != null) {
        output.writeMessage(2, getProfile());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getWalletIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, walletId_);
      }
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProfile());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent) obj;

      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (hasProfile() != other.hasProfile()) return false;
      if (hasProfile()) {
        if (!getProfile()
            .equals(other.getProfile())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WALLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      if (hasProfile()) {
        hash = (37 * hash) + PROFILE_FIELD_NUMBER;
        hash = (53 * hash) + getProfile().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        walletId_ = "";

        if (profileBuilder_ == null) {
          profile_ = null;
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent(this);
        result.walletId_ = walletId_;
        if (profileBuilder_ == null) {
          result.profile_ = profile_;
        } else {
          result.profile_ = profileBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent.getDefaultInstance()) return this;
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (other.hasProfile()) {
          mergeProfile(other.getProfile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string wallet_id = 1;</code>
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string wallet_id = 1;</code>
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> profileBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public boolean hasProfile() {
        return profileBuilder_ != null || profile_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
        if (profileBuilder_ == null) {
          return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        } else {
          return profileBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          profile_ = value;
          onChanged();
        } else {
          profileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder builderForValue) {
        if (profileBuilder_ == null) {
          profile_ = builderForValue.build();
          onChanged();
        } else {
          profileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder mergeProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (profile_ != null) {
            profile_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.newBuilder(profile_).mergeFrom(value).buildPartial();
          } else {
            profile_ = value;
          }
          onChanged();
        } else {
          profileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder clearProfile() {
        if (profileBuilder_ == null) {
          profile_ = null;
          onChanged();
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder getProfileBuilder() {
        
        onChanged();
        return getProfileFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
        if (profileBuilder_ != null) {
          return profileBuilder_.getMessageOrBuilder();
        } else {
          return profile_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> 
          getProfileFieldBuilder() {
        if (profileBuilder_ == null) {
          profileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder>(
                  getProfile(),
                  getParentForChildren(),
                  isClean());
          profile_ = null;
        }
        return profileBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletCreatedEvent)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalletCreatedEvent>
        PARSER = new com.google.protobuf.AbstractParser<WalletCreatedEvent>() {
      @java.lang.Override
      public WalletCreatedEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalletCreatedEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalletCreatedEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalletCreatedEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletCreatedEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalletStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.WalletState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double balance = 1;</code>
     */
    double getBalance();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    boolean hasProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder();

    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> 
        getTransactionHistoryList();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactionHistory(int index);
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    int getTransactionHistoryCount();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
        getTransactionHistoryOrBuilderList();
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionHistoryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletState}
   */
  public  static final class WalletState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletState)
      WalletStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WalletState.newBuilder() to construct.
    private WalletState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WalletState() {
      transactionHistory_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WalletState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WalletState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              balance_ = input.readDouble();
              break;
            }
            case 18: {
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder subBuilder = null;
              if (profile_ != null) {
                subBuilder = profile_.toBuilder();
              }
              profile_ = input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(profile_);
                profile_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transactionHistory_ = new java.util.ArrayList<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction>();
                mutable_bitField0_ |= 0x00000001;
              }
              transactionHistory_.add(
                  input.readMessage(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          transactionHistory_ = java.util.Collections.unmodifiableList(transactionHistory_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.Builder.class);
    }

    public static final int BALANCE_FIELD_NUMBER = 1;
    private double balance_;
    /**
     * <code>double balance = 1;</code>
     */
    public double getBalance() {
      return balance_;
    }

    public static final int PROFILE_FIELD_NUMBER = 2;
    private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public boolean hasProfile() {
      return profile_ != null;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
      return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
      return getProfile();
    }

    public static final int TRANSACTIONHISTORY_FIELD_NUMBER = 3;
    private java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> transactionHistory_;
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> getTransactionHistoryList() {
      return transactionHistory_;
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    public java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
        getTransactionHistoryOrBuilderList() {
      return transactionHistory_;
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    public int getTransactionHistoryCount() {
      return transactionHistory_.size();
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactionHistory(int index) {
      return transactionHistory_.get(index);
    }
    /**
     * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionHistoryOrBuilder(
        int index) {
      return transactionHistory_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (balance_ != 0D) {
        output.writeDouble(1, balance_);
      }
      if (profile_ != null) {
        output.writeMessage(2, getProfile());
      }
      for (int i = 0; i < transactionHistory_.size(); i++) {
        output.writeMessage(3, transactionHistory_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (balance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, balance_);
      }
      if (profile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProfile());
      }
      for (int i = 0; i < transactionHistory_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, transactionHistory_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState) obj;

      if (java.lang.Double.doubleToLongBits(getBalance())
          != java.lang.Double.doubleToLongBits(
              other.getBalance())) return false;
      if (hasProfile() != other.hasProfile()) return false;
      if (hasProfile()) {
        if (!getProfile()
            .equals(other.getProfile())) return false;
      }
      if (!getTransactionHistoryList()
          .equals(other.getTransactionHistoryList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBalance()));
      if (hasProfile()) {
        hash = (37 * hash) + PROFILE_FIELD_NUMBER;
        hash = (53 * hash) + getProfile().hashCode();
      }
      if (getTransactionHistoryCount() > 0) {
        hash = (37 * hash) + TRANSACTIONHISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionHistoryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.WalletState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.WalletState)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTransactionHistoryFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        balance_ = 0D;

        if (profileBuilder_ == null) {
          profile_ = null;
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }
        if (transactionHistoryBuilder_ == null) {
          transactionHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          transactionHistoryBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState(this);
        int from_bitField0_ = bitField0_;
        result.balance_ = balance_;
        if (profileBuilder_ == null) {
          result.profile_ = profile_;
        } else {
          result.profile_ = profileBuilder_.build();
        }
        if (transactionHistoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            transactionHistory_ = java.util.Collections.unmodifiableList(transactionHistory_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.transactionHistory_ = transactionHistory_;
        } else {
          result.transactionHistory_ = transactionHistoryBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState.getDefaultInstance()) return this;
        if (other.getBalance() != 0D) {
          setBalance(other.getBalance());
        }
        if (other.hasProfile()) {
          mergeProfile(other.getProfile());
        }
        if (transactionHistoryBuilder_ == null) {
          if (!other.transactionHistory_.isEmpty()) {
            if (transactionHistory_.isEmpty()) {
              transactionHistory_ = other.transactionHistory_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTransactionHistoryIsMutable();
              transactionHistory_.addAll(other.transactionHistory_);
            }
            onChanged();
          }
        } else {
          if (!other.transactionHistory_.isEmpty()) {
            if (transactionHistoryBuilder_.isEmpty()) {
              transactionHistoryBuilder_.dispose();
              transactionHistoryBuilder_ = null;
              transactionHistory_ = other.transactionHistory_;
              bitField0_ = (bitField0_ & ~0x00000001);
              transactionHistoryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTransactionHistoryFieldBuilder() : null;
            } else {
              transactionHistoryBuilder_.addAllMessages(other.transactionHistory_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double balance_ ;
      /**
       * <code>double balance = 1;</code>
       */
      public double getBalance() {
        return balance_;
      }
      /**
       * <code>double balance = 1;</code>
       */
      public Builder setBalance(double value) {
        
        balance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double balance = 1;</code>
       */
      public Builder clearBalance() {
        
        balance_ = 0D;
        onChanged();
        return this;
      }

      private com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile profile_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> profileBuilder_;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public boolean hasProfile() {
        return profileBuilder_ != null || profile_ != null;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getProfile() {
        if (profileBuilder_ == null) {
          return profile_ == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        } else {
          return profileBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          profile_ = value;
          onChanged();
        } else {
          profileBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder setProfile(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder builderForValue) {
        if (profileBuilder_ == null) {
          profile_ = builderForValue.build();
          onChanged();
        } else {
          profileBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder mergeProfile(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile value) {
        if (profileBuilder_ == null) {
          if (profile_ != null) {
            profile_ =
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.newBuilder(profile_).mergeFrom(value).buildPartial();
          } else {
            profile_ = value;
          }
          onChanged();
        } else {
          profileBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public Builder clearProfile() {
        if (profileBuilder_ == null) {
          profile_ = null;
          onChanged();
        } else {
          profile_ = null;
          profileBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder getProfileBuilder() {
        
        onChanged();
        return getProfileFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder getProfileOrBuilder() {
        if (profileBuilder_ != null) {
          return profileBuilder_.getMessageOrBuilder();
        } else {
          return profile_ == null ?
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance() : profile_;
        }
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.Profile profile = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder> 
          getProfileFieldBuilder() {
        if (profileBuilder_ == null) {
          profileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder>(
                  getProfile(),
                  getParentForChildren(),
                  isClean());
          profile_ = null;
        }
        return profileBuilder_;
      }

      private java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> transactionHistory_ =
        java.util.Collections.emptyList();
      private void ensureTransactionHistoryIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          transactionHistory_ = new java.util.ArrayList<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction>(transactionHistory_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> transactionHistoryBuilder_;

      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> getTransactionHistoryList() {
        if (transactionHistoryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(transactionHistory_);
        } else {
          return transactionHistoryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public int getTransactionHistoryCount() {
        if (transactionHistoryBuilder_ == null) {
          return transactionHistory_.size();
        } else {
          return transactionHistoryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getTransactionHistory(int index) {
        if (transactionHistoryBuilder_ == null) {
          return transactionHistory_.get(index);
        } else {
          return transactionHistoryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder setTransactionHistory(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionHistoryIsMutable();
          transactionHistory_.set(index, value);
          onChanged();
        } else {
          transactionHistoryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder setTransactionHistory(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionHistoryBuilder_ == null) {
          ensureTransactionHistoryIsMutable();
          transactionHistory_.set(index, builderForValue.build());
          onChanged();
        } else {
          transactionHistoryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder addTransactionHistory(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionHistoryIsMutable();
          transactionHistory_.add(value);
          onChanged();
        } else {
          transactionHistoryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder addTransactionHistory(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction value) {
        if (transactionHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTransactionHistoryIsMutable();
          transactionHistory_.add(index, value);
          onChanged();
        } else {
          transactionHistoryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder addTransactionHistory(
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionHistoryBuilder_ == null) {
          ensureTransactionHistoryIsMutable();
          transactionHistory_.add(builderForValue.build());
          onChanged();
        } else {
          transactionHistoryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder addTransactionHistory(
          int index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder builderForValue) {
        if (transactionHistoryBuilder_ == null) {
          ensureTransactionHistoryIsMutable();
          transactionHistory_.add(index, builderForValue.build());
          onChanged();
        } else {
          transactionHistoryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder addAllTransactionHistory(
          java.lang.Iterable<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction> values) {
        if (transactionHistoryBuilder_ == null) {
          ensureTransactionHistoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, transactionHistory_);
          onChanged();
        } else {
          transactionHistoryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder clearTransactionHistory() {
        if (transactionHistoryBuilder_ == null) {
          transactionHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          transactionHistoryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public Builder removeTransactionHistory(int index) {
        if (transactionHistoryBuilder_ == null) {
          ensureTransactionHistoryIsMutable();
          transactionHistory_.remove(index);
          onChanged();
        } else {
          transactionHistoryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder getTransactionHistoryBuilder(
          int index) {
        return getTransactionHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder getTransactionHistoryOrBuilder(
          int index) {
        if (transactionHistoryBuilder_ == null) {
          return transactionHistory_.get(index);  } else {
          return transactionHistoryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public java.util.List<? extends com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
           getTransactionHistoryOrBuilderList() {
        if (transactionHistoryBuilder_ != null) {
          return transactionHistoryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(transactionHistory_);
        }
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder addTransactionHistoryBuilder() {
        return getTransactionHistoryFieldBuilder().addBuilder(
            com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder addTransactionHistoryBuilder(
          int index) {
        return getTransactionHistoryFieldBuilder().addBuilder(
            index, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance());
      }
      /**
       * <code>repeated .com.bigdataConcept.akka.serverless.ewallet.domain.Transaction transactionHistory = 3;</code>
       */
      public java.util.List<com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder> 
           getTransactionHistoryBuilderList() {
        return getTransactionHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder> 
          getTransactionHistoryFieldBuilder() {
        if (transactionHistoryBuilder_ == null) {
          transactionHistoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder>(
                  transactionHistory_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          transactionHistory_ = null;
        }
        return transactionHistoryBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletState)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.WalletState)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WalletState>
        PARSER = new com.google.protobuf.AbstractParser<WalletState>() {
      @java.lang.Override
      public WalletState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WalletState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WalletState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WalletState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.WalletState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.Transaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double amount = 1;</code>
     */
    double getAmount();

    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
     */
    int getTransactionTypeValue();
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
     */
    com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransactionType();

    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    boolean hasTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    com.google.protobuf.Timestamp getTransactionDate();
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Transaction)
      TransactionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transaction.newBuilder() to construct.
    private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transaction() {
      transactionType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Transaction();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              amount_ = input.readDouble();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              transactionType_ = rawValue;
              break;
            }
            case 26: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (transactionDate_ != null) {
                subBuilder = transactionDate_.toBuilder();
              }
              transactionDate_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transactionDate_);
                transactionDate_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder.class);
    }

    public static final int AMOUNT_FIELD_NUMBER = 1;
    private double amount_;
    /**
     * <code>double amount = 1;</code>
     */
    public double getAmount() {
      return amount_;
    }

    public static final int TRANSACTIONTYPE_FIELD_NUMBER = 2;
    private int transactionType_;
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
     */
    public int getTransactionTypeValue() {
      return transactionType_;
    }
    /**
     * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
     */
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransactionType() {
      @SuppressWarnings("deprecation")
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transactionType_);
      return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
    }

    public static final int TRANSACTIONDATE_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp transactionDate_;
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    public boolean hasTransactionDate() {
      return transactionDate_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    public com.google.protobuf.Timestamp getTransactionDate() {
      return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
    }
    /**
     * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
      return getTransactionDate();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (amount_ != 0D) {
        output.writeDouble(1, amount_);
      }
      if (transactionType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        output.writeEnum(2, transactionType_);
      }
      if (transactionDate_ != null) {
        output.writeMessage(3, getTransactionDate());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (amount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, amount_);
      }
      if (transactionType_ != com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.Credit.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, transactionType_);
      }
      if (transactionDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTransactionDate());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction) obj;

      if (java.lang.Double.doubleToLongBits(getAmount())
          != java.lang.Double.doubleToLongBits(
              other.getAmount())) return false;
      if (transactionType_ != other.transactionType_) return false;
      if (hasTransactionDate() != other.hasTransactionDate()) return false;
      if (hasTransactionDate()) {
        if (!getTransactionDate()
            .equals(other.getTransactionDate())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmount()));
      hash = (37 * hash) + TRANSACTIONTYPE_FIELD_NUMBER;
      hash = (53 * hash) + transactionType_;
      if (hasTransactionDate()) {
        hash = (37 * hash) + TRANSACTIONDATE_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionDate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Transaction)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = 0D;

        transactionType_ = 0;

        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction(this);
        result.amount_ = amount_;
        result.transactionType_ = transactionType_;
        if (transactionDateBuilder_ == null) {
          result.transactionDate_ = transactionDate_;
        } else {
          result.transactionDate_ = transactionDateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction.getDefaultInstance()) return this;
        if (other.getAmount() != 0D) {
          setAmount(other.getAmount());
        }
        if (other.transactionType_ != 0) {
          setTransactionTypeValue(other.getTransactionTypeValue());
        }
        if (other.hasTransactionDate()) {
          mergeTransactionDate(other.getTransactionDate());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double amount_ ;
      /**
       * <code>double amount = 1;</code>
       */
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>double amount = 1;</code>
       */
      public Builder setAmount(double value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double amount = 1;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0D;
        onChanged();
        return this;
      }

      private int transactionType_ = 0;
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
       */
      public int getTransactionTypeValue() {
        return transactionType_;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
       */
      public Builder setTransactionTypeValue(int value) {
        transactionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
       */
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType getTransactionType() {
        @SuppressWarnings("deprecation")
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType result = com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.valueOf(transactionType_);
        return result == null ? com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
       */
      public Builder setTransactionType(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.TransactionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        transactionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.bigdataConcept.akka.serverless.ewallet.domain.TransactionType transactionType = 2;</code>
       */
      public Builder clearTransactionType() {
        
        transactionType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp transactionDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> transactionDateBuilder_;
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public boolean hasTransactionDate() {
        return transactionDateBuilder_ != null || transactionDate_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public com.google.protobuf.Timestamp getTransactionDate() {
        if (transactionDateBuilder_ == null) {
          return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        } else {
          return transactionDateBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public Builder setTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionDate_ = value;
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public Builder setTransactionDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = builderForValue.build();
          onChanged();
        } else {
          transactionDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public Builder mergeTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (transactionDate_ != null) {
            transactionDate_ =
              com.google.protobuf.Timestamp.newBuilder(transactionDate_).mergeFrom(value).buildPartial();
          } else {
            transactionDate_ = value;
          }
          onChanged();
        } else {
          transactionDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public Builder clearTransactionDate() {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = null;
          onChanged();
        } else {
          transactionDate_ = null;
          transactionDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTransactionDateBuilder() {
        
        onChanged();
        return getTransactionDateFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
        if (transactionDateBuilder_ != null) {
          return transactionDateBuilder_.getMessageOrBuilder();
        } else {
          return transactionDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp transactionDate = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTransactionDateFieldBuilder() {
        if (transactionDateBuilder_ == null) {
          transactionDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTransactionDate(),
                  getParentForChildren(),
                  isClean());
          transactionDate_ = null;
        }
        return transactionDateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Transaction)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Transaction)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transaction>
        PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
      @java.lang.Override
      public Transaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transaction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transaction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Transaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.Profile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string surname = 2;</code>
     */
    java.lang.String getSurname();
    /**
     * <code>string surname = 2;</code>
     */
    com.google.protobuf.ByteString
        getSurnameBytes();

    /**
     * <code>string email = 3;</code>
     */
    java.lang.String getEmail();
    /**
     * <code>string email = 3;</code>
     */
    com.google.protobuf.ByteString
        getEmailBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Profile}
   */
  public  static final class Profile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Profile)
      ProfileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Profile.newBuilder() to construct.
    private Profile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Profile() {
      name_ = "";
      surname_ = "";
      email_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Profile();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Profile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              surname_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              email_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SURNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object surname_;
    /**
     * <code>string surname = 2;</code>
     */
    public java.lang.String getSurname() {
      java.lang.Object ref = surname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        surname_ = s;
        return s;
      }
    }
    /**
     * <code>string surname = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSurnameBytes() {
      java.lang.Object ref = surname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        surname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMAIL_FIELD_NUMBER = 3;
    private volatile java.lang.Object email_;
    /**
     * <code>string email = 3;</code>
     */
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        email_ = s;
        return s;
      }
    }
    /**
     * <code>string email = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getSurnameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, surname_);
      }
      if (!getEmailBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, email_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getSurnameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, surname_);
      }
      if (!getEmailBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, email_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getSurname()
          .equals(other.getSurname())) return false;
      if (!getEmail()
          .equals(other.getEmail())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SURNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSurname().hashCode();
      hash = (37 * hash) + EMAIL_FIELD_NUMBER;
      hash = (53 * hash) + getEmail().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Profile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Profile)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.ProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        surname_ = "";

        email_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile(this);
        result.name_ = name_;
        result.surname_ = surname_;
        result.email_ = email_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSurname().isEmpty()) {
          surname_ = other.surname_;
          onChanged();
        }
        if (!other.getEmail().isEmpty()) {
          email_ = other.email_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object surname_ = "";
      /**
       * <code>string surname = 2;</code>
       */
      public java.lang.String getSurname() {
        java.lang.Object ref = surname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          surname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string surname = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSurnameBytes() {
        java.lang.Object ref = surname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          surname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string surname = 2;</code>
       */
      public Builder setSurname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        surname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string surname = 2;</code>
       */
      public Builder clearSurname() {
        
        surname_ = getDefaultInstance().getSurname();
        onChanged();
        return this;
      }
      /**
       * <code>string surname = 2;</code>
       */
      public Builder setSurnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        surname_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object email_ = "";
      /**
       * <code>string email = 3;</code>
       */
      public java.lang.String getEmail() {
        java.lang.Object ref = email_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string email = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        java.lang.Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string email = 3;</code>
       */
      public Builder setEmail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string email = 3;</code>
       */
      public Builder clearEmail() {
        
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <code>string email = 3;</code>
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        email_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Profile)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Profile)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Profile>
        PARSER = new com.google.protobuf.AbstractParser<Profile>() {
      @java.lang.Override
      public Profile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Profile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Profile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Profile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Profile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MoneyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.bigdataConcept.akka.serverless.ewallet.domain.Money)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double amount = 1;</code>
     */
    double getAmount();

    /**
     * <code>string currency = 2;</code>
     */
    java.lang.String getCurrency();
    /**
     * <code>string currency = 2;</code>
     */
    com.google.protobuf.ByteString
        getCurrencyBytes();
  }
  /**
   * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Money}
   */
  public  static final class Money extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Money)
      MoneyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Money.newBuilder() to construct.
    private Money(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Money() {
      currency_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Money();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Money(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              amount_ = input.readDouble();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              currency_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder.class);
    }

    public static final int AMOUNT_FIELD_NUMBER = 1;
    private double amount_;
    /**
     * <code>double amount = 1;</code>
     */
    public double getAmount() {
      return amount_;
    }

    public static final int CURRENCY_FIELD_NUMBER = 2;
    private volatile java.lang.Object currency_;
    /**
     * <code>string currency = 2;</code>
     */
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currency_ = s;
        return s;
      }
    }
    /**
     * <code>string currency = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (amount_ != 0D) {
        output.writeDouble(1, amount_);
      }
      if (!getCurrencyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, currency_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (amount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, amount_);
      }
      if (!getCurrencyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, currency_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money)) {
        return super.equals(obj);
      }
      com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money other = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money) obj;

      if (java.lang.Double.doubleToLongBits(getAmount())
          != java.lang.Double.doubleToLongBits(
              other.getAmount())) return false;
      if (!getCurrency()
          .equals(other.getCurrency())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAmount()));
      hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + getCurrency().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bigdataConcept.akka.serverless.ewallet.domain.Money}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.bigdataConcept.akka.serverless.ewallet.domain.Money)
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.MoneyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.class, com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.Builder.class);
      }

      // Construct using com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = 0D;

        currency_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getDefaultInstanceForType() {
        return com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance();
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money build() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money buildPartial() {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money result = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money(this);
        result.amount_ = amount_;
        result.currency_ = currency_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money) {
          return mergeFrom((com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money other) {
        if (other == com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money.getDefaultInstance()) return this;
        if (other.getAmount() != 0D) {
          setAmount(other.getAmount());
        }
        if (!other.getCurrency().isEmpty()) {
          currency_ = other.currency_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double amount_ ;
      /**
       * <code>double amount = 1;</code>
       */
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>double amount = 1;</code>
       */
      public Builder setAmount(double value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double amount = 1;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object currency_ = "";
      /**
       * <code>string currency = 2;</code>
       */
      public java.lang.String getCurrency() {
        java.lang.Object ref = currency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          currency_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string currency = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCurrencyBytes() {
        java.lang.Object ref = currency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string currency = 2;</code>
       */
      public Builder setCurrency(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string currency = 2;</code>
       */
      public Builder clearCurrency() {
        
        currency_ = getDefaultInstance().getCurrency();
        onChanged();
        return this;
      }
      /**
       * <code>string currency = 2;</code>
       */
      public Builder setCurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        currency_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Money)
    }

    // @@protoc_insertion_point(class_scope:com.bigdataConcept.akka.serverless.ewallet.domain.Money)
    private static final com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money();
    }

    public static com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Money>
        PARSER = new com.google.protobuf.AbstractParser<Money>() {
      @java.lang.Override
      public Money parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Money(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Money> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Money> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.bigdataConcept.akka.serverless.ewallet.domain.WalletDomain.Money getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"value-entities/wallet_domain.proto\0221co" +
      "m.bigdataConcept.akka.serverless.ewallet" +
      ".domain\032 akkaserverless/annotations.prot" +
      "o\032\037google/protobuf/timestamp.proto\"\373\001\n\023W" +
      "alletCreditedEvent\022\021\n\twallet_id\030\001 \001(\t\022E\n" +
      "\003amt\030\002 \001(\01328.com.bigdataConcept.akka.ser" +
      "verless.ewallet.domain.Money\022U\n\ttransTyp" +
      "e\030\003 \001(\0162B.com.bigdataConcept.akka.server" +
      "less.ewallet.domain.TransactionType\0223\n\017t" +
      "ransactionDate\030\004 \001(\0132\032.google.protobuf.T" +
      "imestamp\"\372\001\n\022WalletDebitedEvent\022\021\n\twalle" +
      "t_id\030\001 \001(\t\022E\n\003amt\030\002 \001(\01328.com.bigdataCon" +
      "cept.akka.serverless.ewallet.domain.Mone" +
      "y\022U\n\ttransType\030\003 \001(\0162B.com.bigdataConcep" +
      "t.akka.serverless.ewallet.domain.Transac" +
      "tionType\0223\n\017transactionDate\030\004 \001(\0132\032.goog" +
      "le.protobuf.Timestamp\"t\n\022WalletCreatedEv" +
      "ent\022\021\n\twallet_id\030\001 \001(\t\022K\n\007profile\030\002 \001(\0132" +
      ":.com.bigdataConcept.akka.serverless.ewa" +
      "llet.domain.Profile\"\307\001\n\013WalletState\022\017\n\007b" +
      "alance\030\001 \001(\001\022K\n\007profile\030\002 \001(\0132:.com.bigd" +
      "ataConcept.akka.serverless.ewallet.domai" +
      "n.Profile\022Z\n\022transactionHistory\030\003 \003(\0132>." +
      "com.bigdataConcept.akka.serverless.ewall" +
      "et.domain.Transaction\"\257\001\n\013Transaction\022\016\n" +
      "\006amount\030\001 \001(\001\022[\n\017transactionType\030\002 \001(\0162B" +
      ".com.bigdataConcept.akka.serverless.ewal" +
      "let.domain.TransactionType\0223\n\017transactio" +
      "nDate\030\003 \001(\0132\032.google.protobuf.Timestamp\"" +
      "7\n\007Profile\022\014\n\004name\030\001 \001(\t\022\017\n\007surname\030\002 \001(" +
      "\t\022\r\n\005email\030\003 \001(\t\")\n\005Money\022\016\n\006amount\030\001 \001(" +
      "\001\022\020\n\010currency\030\002 \001(\t*(\n\017TransactionType\022\n" +
      "\n\006Credit\020\000\022\t\n\005Debit\020\001BmB\014WalletDomain\302C\\" +
      "\nZ\n\006Wallet\022\006wallet\032\013WalletState\"\022WalletC" +
      "reatedEvent\"\023WalletCreditedEvent\"\022Wallet" +
      "DebitedEventb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.akkaserverless.Annotations.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreditedEvent_descriptor,
        new java.lang.String[] { "WalletId", "Amt", "TransType", "TransactionDate", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletDebitedEvent_descriptor,
        new java.lang.String[] { "WalletId", "Amt", "TransType", "TransactionDate", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletCreatedEvent_descriptor,
        new java.lang.String[] { "WalletId", "Profile", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_WalletState_descriptor,
        new java.lang.String[] { "Balance", "Profile", "TransactionHistory", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Transaction_descriptor,
        new java.lang.String[] { "Amount", "TransactionType", "TransactionDate", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Profile_descriptor,
        new java.lang.String[] { "Name", "Surname", "Email", });
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_bigdataConcept_akka_serverless_ewallet_domain_Money_descriptor,
        new java.lang.String[] { "Amount", "Currency", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.akkaserverless.Annotations.file);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.akkaserverless.Annotations.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
